{"version":3,"sources":["webpack:///./src/components/blog/postItem/postItem.js","webpack:///./src/pages/blog.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/blog/header/header.js","webpack:///./src/components/blog/layout/layout.js"],"names":["PostItem","_ref","fields","frontmatter","title","slug","react_default","a","createElement","className","styles","post","image","gatsby_image_default","fluid","childImageSharp","alt","imageAlt","postThumb","content","date","style","marginTop","rhythm","gatsby_browser_entry","to","postTitle","marginBottom","description","BlogIndex","location","_staticQueryData$data","_2088580319","data","siteMetadata","site","posts","allMarkdownRemark","edges","layout","maxWidth","seo","blogTitle","noTemplate","map","_ref2","node","draft","postItem","key","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1__","typography_theme_ocean_beach__WEBPACK_IMPORTED_MODULE_1___default","oceanBeachTheme","overrideThemeStyles","color","backgroundImage","h1, h2, h3, h4, h5, h6","ol","ul","li","margin","padding","h1","fontSize","h2","h3","p","img, figure","typography","Typography","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","SEO","lang","meta","type","_public_static_d_642828755_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","img","siteUrl","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","property","href","author","concat","defaultProps","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Header","_92744087","display","justifyContent","alignItems","marginLeft","marginRight","borderRadius","alignSelf","src","BlogLayout","children","Fragment","textAlign","lineHeight","icon","onClick","window","scrollTo","top","behavior","index_es","size","faArrowUp","credits","Date","getFullYear"],"mappings":"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","file":"component---src-pages-blog-js-9918bc732de3ba9423bd.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../../../utils/typography\"\nimport styles from \"./postItem.module.css\"\n\nfunction PostItem({ fields, frontmatter }) {\n  const title = frontmatter.title || fields.slug\n  return (\n    <article className={styles.post}>\n      {frontmatter.image && (\n        <Image\n          fluid={frontmatter.image.childImageSharp.fluid}\n          alt={frontmatter.imageAlt}\n          className={styles.postThumb}\n        />\n      )}\n      <div className={styles.content}>\n        <header>\n          <small>{frontmatter.date}</small>\n          <h2\n            style={{\n              marginTop: rhythm(1 / 4),\n            }}\n          >\n            <Link to={fields.slug} className={styles.postTitle}>\n              {title}\n            </Link>\n          </h2>\n        </header>\n        <p style={{ marginBottom: 0 }}>{frontmatter.description}</p>\n      </div>\n    </article>\n  )\n}\n\nexport default PostItem\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/blog/layout/layout\"\nimport SEO from \"../components/seo\"\nimport PostItem from \"../components/blog/postItem/postItem\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default function BlogIndex({ location }) {\n  const {\n    site: { siteMetadata },\n    allMarkdownRemark,\n  } = useStaticQuery(graphql`\n    query BlogIndexQuery {\n      site {\n        siteMetadata {\n          blogTitle\n          description\n        }\n      }\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { fileAbsolutePath: { regex: \"/(blog)/.*md$/\" } }\n      ) {\n        edges {\n          node {\n            excerpt\n            fields {\n              slug\n            }\n            frontmatter {\n              draft\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              description\n              imageAlt\n              image {\n                childImageSharp {\n                  fluid {\n                    ...GatsbyImageSharpFluid_tracedSVG\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = allMarkdownRemark.edges\n\n  return (\n    <Layout maxWidth={rhythm(30)}>\n      <SEO\n        title={siteMetadata.blogTitle}\n        noTemplate\n        description={siteMetadata.description}\n        location={location}\n      />\n      {posts.map(({ node }) => {\n        return (\n          (!node.frontmatter.draft ||\n            process.env.NODE_ENV === \"development\") && (\n            <PostItem\n              frontmatter={node.frontmatter}\n              fields={node.fields}\n              key={node.fields.slug}\n            />\n          )\n        )\n      })}\n    </Layout>\n  )\n}\n","import Typography from \"typography\"\nimport oceanBeachTheme from \"typography-theme-ocean-beach\"\n\nconst linkColor = \"#039be5\"\n\noceanBeachTheme.overrideThemeStyles = () => ({\n  a: {\n    color: linkColor,\n    backgroundImage: `linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 1px, ${linkColor} 1px, ${linkColor} 2px, rgba(0, 0, 0, 0) 2px)`, // eslint-disable-line\n  },\n  \"h1, h2, h3, h4, h5, h6\": {\n    marginTop: \"1.5em\",\n    marginBottom: \"0.8em\",\n  },\n  ol: {\n    color: \"#666\",\n  },\n  ul: {\n    color: \"#666\",\n  },\n  li: {\n    margin: 0,\n    padding: \"0.1em\",\n  },\n  h1: {\n    color: \"#555\",\n    fontSize: \"3em\",\n  },\n  h2: {\n    color: \"#555\",\n  },\n  h3: {\n    fontSize: \"1.2em\",\n    color: \"#555\",\n  },\n  p: {\n    color: \"#666\",\n  },\n  \"img, figure\": {\n    marginBottom: \"0\",\n  },\n})\n\nconst typography = new Typography(oceanBeachTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const { rhythm } = typography\nexport const { scale } = typography\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  title,\n  noTemplate,\n  type,\n  location,\n  image,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const img = image\n    ? `${site.siteMetadata.siteUrl}${image}`\n    : \"https://www.gravatar.com/avatar/a244447940601d3cf55d27c7278ce446?s=200\"\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title || site.siteMetadata.title}\n      titleTemplate={!noTemplate ? `%s | ${site.siteMetadata.title}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:url`,\n          content: location && location.href,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: type || \"website\",\n        },\n        {\n          property: `og:image`,\n          content: img,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:image`,\n          content: img,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { rhythm } from \"../../../utils/typography\"\nimport styles from \"./header.module.css\"\n\nexport default function Header() {\n  const {\n    site: { siteMetadata },\n  } = useStaticQuery(graphql`\n    query BlogHeaderQuery {\n      site {\n        siteMetadata {\n          author\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <header\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(30),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <img\n          style={{ borderRadius: \".5em\", alignSelf: \"center\", margin: 0 }}\n          src=\"https://www.gravatar.com/avatar/a244447940601d3cf55d27c7278ce446?s=60\"\n          alt=\"\"\n        />\n        <h4 style={{ margin: \"0 .5em\", color: \"#333\" }}>\n          <Link to=\"/\" className={styles.title}>\n            {siteMetadata.title}\n          </Link>\n        </h4>\n      </div>\n\n      <nav>\n        <Link to=\"/blog\">Blog</Link>\n      </nav>\n    </header>\n  )\n}\n","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faArrowUp } from \"@fortawesome/fontawesome-free-solid\"\n\nimport { rhythm } from \"../../../utils/typography\"\nimport Header from \"../header/header\"\n\nimport styles from \"./layout.module.css\"\n\nexport default function BlogLayout({ children, maxWidth }) {\n  return (\n    <>\n      <Header />\n      <main\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth,\n          padding: `0 ${rhythm(3 / 4)}`,\n        }}\n      >\n        {children}\n      </main>\n      <footer\n        style={{ textAlign: \"center\", fontSize: \".8em\", lineHeight: \"1.2em\" }}\n      >\n        <button\n          className={styles.icon}\n          type=\"button\"\n          onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\n        >\n          <FontAwesomeIcon size=\"lg\" icon={faArrowUp} title=\"arrow up\" />\n        </button>\n        <p className={styles.credits}>\n          Crafted with <span style={{ color: \"#bb1a34\" }}>❤</span> by me\n          <br />©{new Date().getFullYear()}\n        </p>\n      </footer>\n    </>\n  )\n}\n"],"sourceRoot":""}